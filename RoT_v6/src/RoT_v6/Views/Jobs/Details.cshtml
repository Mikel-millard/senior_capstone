@model RoT_v6.ViewModels.JobsDetails_JobPurchasesWorkTask

@{
    ViewData["Title"] = "Details";
}
<p>
    <h2>Job Details</h2>
    <a class="btn btn-primary" asp-action="EditDetails" asp-route-id="@Model.Job.JobID">Edit</a>
    <a class="btn btn-primary" asp-action="Index">Back to List</a>
</p>
<div class="container">
    <div class="row" style="border: 2px solid #2B303A; border-radius:1em; padding-bottom:.5em;">
        <div class="col-md-4">
            <div class="">
                <h4>
                    @Html.DisplayNameFor(model => model.Job.jobNum)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.jobNum)
                </span>
                <h4>
                    @Html.DisplayNameFor(model => model.Job.Client)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.Client)
                </span>
                <h4>
                    @Html.DisplayNameFor(model => model.Job.Description)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.Description)
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="">
                <h4>
                    @Html.DisplayNameFor(model => model.Job.StartDate)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.StartDate)
                </span>
                <h4>
                    @Html.DisplayNameFor(model => model.Job.DesiredDate)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.DesiredDate)
                </span>
                <h4>
                    @Html.DisplayNameFor(model => model.Job.CompleteDate)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.CompleteDate)
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <h4>Hours Current vs. Budgeted</h4>
            <div class="progress" id="hours_Progress">
            </div>
            <h4>Cost Current vs. Budgeted</h4>
            <div class="progress" id="cost_Progress">
            </div>
            <h3>Status <span class="label" id="project_status">@Html.DisplayFor(model => model.Job.Status)</span></h3>
        </div>
    </div>
</div>

<div class="row">

    <ul class="nav nav-tabs page-tabs" role="tablist" id="JobDetailsTabs">
        <li role="presentation" class="active"><a href="#ActiveTasksTab" aria-controls="ActiveTasksTab" role="tab" data-toggle="tab">Active Tasks</a></li>
        <li role="presentation"><a href="#CompletedTasksTab" aria-controls="CompletedTasksTab" role="tab" data-toggle="tab">Completed Tasks</a></li>
        <li role="presentation"><a href="#PurchasesTab" aria-controls="PurchasesTab" role="tab" data-toggle="tab">Purchases</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="ActiveTasksTab">
            <p>
            </p>
            <table class="table table-striped table-bordered" id="ActiveTasks">
                <thead class="data_table_head">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Block)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].partNum)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Employees[0].firstName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].CompleteDate)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ActiveTasks)
            {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Block)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.partNum)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Employees[0].firstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CompleteDate)
                            </td>
                            <td>
                                <a class="btn btn-primary" asp-controller="WorkTasks" asp-action="EditJobDetails" asp-route-id="@item.TaskID" asp-route-JobID="@item.JobID">Edit</a>
                                <a class="btn btn-primary" asp-controller="WorkTasks" asp-action="DetailsJobDetails" asp-route-id="@item.TaskID">Details</a>
                                <a class="btn btn-primary" asp-controller="WorkTasks" asp-action="DeleteJobDetails" asp-route-id="@item.TaskID">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="CompletedTasksTab">
            <p>
            </p>
            <table class="table table-striped table-bordered" id="CompletedTasks">
                <thead class="data_table_head">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].Block)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].partNum)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].Employees[0].firstName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].CompleteDate)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CompletedTasks)
            {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Block)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.partNum)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Employees[0].firstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CompleteDate)
                            </td>
                            <td>
                                <a class="btn btn-primary" asp-controller="WorkTasks" asp-action="EditJobDetails" asp-route-id="@item.TaskID" asp-route-JobID="@item.JobID">Edit</a>
                                <a class="btn btn-primary" asp-controller="WorkTasks" asp-action="DetailsJobDetails" asp-route-id="@item.TaskID">Details</a>
                                <a class="btn btn-primary" asp-controller="WorkTasks" asp-action="DeleteJobDetails" asp-route-id="@item.TaskID">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="PurchasesTab">
            <p>
               
                
            </p>
            <table class="table table-striped table-bordered" id="Purchases">
                <thead class="data_table_head">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].Block)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].Quantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].RequestDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].EstArrDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].ArrivedDate)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Purchases)
            {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Block)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RequestDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EstArrDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ArrivedDate)
                            </td>
                            <td>
                                <a class="btn btn-primary" asp-controller="Purchases" asp-action="EditJobDetails" asp-route-id="@item.purchID">Edit</a>
                                <a class="btn btn-primary" asp-controller="Purchases" asp-action="DetailsJobDetails" asp-route-id="@item.purchID">Details</a>
                                <a class="btn btn-primary" asp-controller="Purchases" asp-action="DeleteJobDetails" asp-route-id="@item.purchID">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <p>
                <a class="btn btn-primary btn-padding" asp-controller="Purchases" asp-action="Create" asp-route-JobID="@Model.Job.JobID">Create New</a>
            </p>
        </div>
    </div>
</div>
<script>
    var ActiveTable;
    var CompletedTable;
    var PurchasesTable;
    $(document).ready(function () {
        ActiveTable = $("#ActiveTasks").DataTable({
            "scrollY": "200px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": false,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" }
            ]
        });
        CompletedTable = $("#CompletedTasks").DataTable({
            "scrollY":"200px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": false,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" }
            ]
        });
        PurchasesTable = $("#Purchases").DataTable({
            "scrollY": "200px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": false,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" }
            ]
        });
        // Handles Progress bars for the hours and cost
        var estHours = @Model.Job.EstHours;
        var invHours = @Model.Job.InvHours;
        var estCost = @Model.Job.EstCost;
        var invCost = @Model.Job.InvCost;
        var hourProg = parseInt((invHours / estHours) * 100);
        var costProg = parseInt((invCost / estCost) * 100);
        $("#hours_Progress").html('<div class="progress-bar" role="progressbar" aria-valuenow="' + hourProg + '" aria-valuemin="0" aria-valuemax="120" style="width: ' + hourProg + '%; min-width: 5em;">' + invHours + '/' + estHours + '</div>');
        $("#cost_Progress").html('<div class="progress-bar" role="progressbar" aria-valuenow="' + costProg + '" aria-valuemin="0" aria-valuemax="120" style="width: ' + costProg + '%; min-width: 5em;">' + invCost + '/' + estCost + '</div>');
    })
    $('#JobDetailsTabs a').click(function (e) {
        e.preventDefault()
        $(this).tab('show')
        ActiveTable.columns.adjust().draw()
        CompletedTable.columns.adjust().draw()
        PurchasesTable.columns.adjust().draw()
    })
    //Handle project status label
    var status = "@Model.Job.Status";
    switch(status) {
        case "Active":
            $("#project_status").addClass("label-warning");
            break;
        case "NotReady":
            $("#project_status").addClass("label-danger");
            break;
        case "Completed":
            $("#project_status").addClass("label-success");
            break;
        default:
            $("#project_status").addClass("label-default");
    }
</script>