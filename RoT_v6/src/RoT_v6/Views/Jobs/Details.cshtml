@model RoT_v6.ViewModels.JobsDetails_JobPurchasesWorkTask
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Details";
}
<p>
    <br />
    @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
    {
        <button class="btn btn-primary" onclick="dataUrl('Jobs', 'EditDetails', @Model.Job.JobID)">Edit</button>
        <a class="btn btn-primary" id="downloadAnchorElem" onclick="getCSV()">Download CSV</a>
    }



    <a class="btn btn-primary" asp-action="Index">Back to List</a>
</p>
<div class="container">
    <div class="row" style="border: 2px solid #2B303A; border-radius:1em; padding-bottom:.5em;">
        <div class="col-md-4">
            <div class="">
                <h4>
                    @Html.DisplayNameFor(model => model.Job.jobNum)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.jobNum)
                </span>
                <h4>
                    @Html.DisplayNameFor(model => model.Job.Client)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.Client)
                </span>
                <h4>
                    @Html.DisplayNameFor(model => model.Job.Description)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.Description)
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="">
                <h4>
                    @Html.DisplayNameFor(model => model.Job.StartDate)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.StartDate)
                </span>
                <h4>
                    @Html.DisplayNameFor(model => model.Job.DesiredDate)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.DesiredDate)
                </span>
                <h4>
                    @Html.DisplayNameFor(model => model.Job.CompleteDate)
                </h4>
                <span>
                    @Html.DisplayFor(model => model.Job.CompleteDate)
                </span>
            </div>
        </div>
       
        <div class="col-md-4">
            @if (!User.IsInRole("Employee"))
            {
                <h4 id="Hours_Label">Hours Current vs. Budgeted</h4>
                <div class="progress" id="hours_Progress">
                </div>
                <h4 id="Cost_Label">Cost Current vs. Budgeted</h4>
                <div class="progress" id="cost_Progress">
                </div>
            }
            <h3>Status <span class="label" id="project_status">@Html.DisplayFor(model => model.Job.Status)</span></h3>
        </div>

    </div>
</div>

<div class="row">

    <ul class="nav nav-tabs page-tabs" role="tablist" id="JobDetailsTabs">
        <li role="presentation" class="active"><a href="#ActiveTasksTab" aria-controls="ActiveTasksTab" role="tab" data-toggle="tab">Active Tasks</a></li>
        <li role="presentation"><a href="#CompletedTasksTab" aria-controls="CompletedTasksTab" role="tab" data-toggle="tab">Completed Tasks</a></li>
        <li role="presentation"><a href="#PurchasesTab" aria-controls="PurchasesTab" role="tab" data-toggle="tab">Purchases</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content" style="margin-top: 20px;">
        <div role="tabpanel" class="tab-pane active" id="ActiveTasksTab">
            <p>
            </p>
            <table class="table table-striped table-bordered" id="ActiveTasks">
                <thead class="data_table_head">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Block)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].partNum)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Status)
                        </th>
                        <th>
                            Employee
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ActiveTasks)
            {
                        <tr>
                            @if (item.Block == true)
                            {
                                <td class="red-back">
                                    Blocked
                                </td>
                            }
                            else
                            {
                                <td class="green-back"></td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.partNum)
                            </td>
                            @if (item.Status.ToString() == "Pause")
                            {
                                <td class="red-back">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                            }
                            @if (item.Status.ToString() == "Created")
                            {
                                <td class="green-back">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                            }
                            @if (item.Status.ToString() == "InProgress")
                            {
                                <td class="yellow-back">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.employeeId)
                            </td>
                            <td>
                                @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'EditJobDetails', @item.TaskID)">Edit</button>
                                }
                                <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DetailsJobDetails', @item.TaskID)">Details</button>
                                @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DeleteJobDetails', @item.TaskID)">Delete</button>
                                }

                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
            {
                <p>
                    <button class="btn btn-primary btn-padding" onclick="dataUrl('WorkTasks', 'Create', @Model.Job.JobID)">New Task</button>
                </p>

            }



        </div>
        <div role="tabpanel" class="tab-pane" id="CompletedTasksTab">
            <p>
            </p>
            <table class="table table-striped table-bordered" id="CompletedTasks">
                <thead class="data_table_head">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].Block)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].partNum)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].CompleteDate)
                        </th>
                        <th>
                           Employee
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CompletedTasks)
            {
                        <tr>
                            @if (item.Block == true)
                            {
                                <td class="red-back">
                                    Blocked
                                </td>
                            }
                            else
                            {
                                <td class="green-back"></td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.partNum)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CompleteDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.employeeId)
                            </td>

                            <td>
                                @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'EditJobDetails', @item.TaskID)">Edit</button>
                                }
                                <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DetailsJobDetails', @item.TaskID)">Details</button>
                                @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DeleteJobDetails', @item.TaskID)">Delete</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="PurchasesTab">
            <p>


            </p>
            <table class="table table-striped table-bordered" id="Purchases">
                <thead class="data_table_head">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].Block)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].Description)
                        </th>
                        <th>
                            Employee
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].Quantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].RequestDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].EstArrDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Purchases[0].ArrivedDate)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Purchases)
            {
                        <tr>
                            @if (item.Block == true)
                            {
                                <td class="red-back">
                                    Blocked
                                </td>
                            }
                            else
                            {
                                <td class="green-back">
                                    
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.employeeId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RequestDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EstArrDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ArrivedDate)
                            </td>
                            <td>
                                @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('Purchases', 'EditJobDetails', @item.purchID)">Edit</button>
                                }
                                <button class="btn btn-primary" onclick="dataUrl('Purchases', 'DetailsJobDetails', @item.purchID)">Details</button>
                                @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('Purchases', 'DeleteJobDetails', @item.purchID)">Delete</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <p>
                <button class="btn btn-primary btn-padding" onclick="dataUrl('Purchases', 'Create', @Model.Job.JobID)">New Purchase Request</button>
            </p>
        </div>
    </div>
</div>
<script>
    var MODEL = @Html.Raw(JsonConvert.SerializeObject(Model));
    function getCSV(){
        JSONToCSVConvertor(MODEL, MODEL.Job.jobNum);  
    }
    var ActiveTable;
    var CompletedTable;
    var PurchasesTable;

    $(document).ready(function () {
        ActiveTable = $("#ActiveTasks").DataTable({
            "scrollY": "300px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": true,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" },
                {
                    "targets": [1,2],
                    "render": $.fn.dataTable.render.ellipsis()
                }
            ]
        });
        CompletedTable = $("#CompletedTasks").DataTable({
            "scrollY":"300px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": true,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" },
                {
                    "targets": [1,2],
                    "render": $.fn.dataTable.render.ellipsis()
                }
            ]
        });
        PurchasesTable = $("#Purchases").DataTable({
            "scrollY": "300px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": true,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" },
                {
                    "targets": 1,
                    "render": $.fn.dataTable.render.ellipsis()
                }
            ]
        });
        // Handles Progress bars for the hours and cost
        var estHours = @Model.Job.EstHours;
        var invHours = @Model.Job.InvHours;
        invHours = (invHours / 3600).toFixed(2);
        var estCost = @Model.Job.EstCost;
        var invCost = @Model.Job.InvCost;
        var hourProg = parseInt((invHours / estHours) * 100);
        var costProg = parseInt((invCost / estCost) * 100);
        
        $("#Hours_Label").text('Hours Current vs. Budgeted : ' + numberWithCommas(invHours) + ' / ' + numberWithCommas(estHours));
        $("#Cost_Label").text('Cost Current vs. Budgeted : ' + numberWithCommas(invCost) + ' / ' + numberWithCommas(estCost));
        if (parseInt(invCost) > parseInt(estCost)){
            $("#cost_Progress").html('<div class="progress-bar red-back" role="progressbar" aria-valuenow="' + costProg + '" aria-valuemin="0" aria-valuemax="120" style="width: ' + costProg + '%;"></div>');
        } else {
            $("#cost_Progress").html('<div class="progress-bar" role="progressbar" aria-valuenow="' + costProg + '" aria-valuemin="0" aria-valuemax="120" style="width: ' + costProg + '%;"></div>');
        }
        if (parseInt(invHours) > parseInt(estHours)){
            $("#hours_Progress").html('<div class="progress-bar red-back" role="progressbar" aria-valuenow="' + hourProg + '" aria-valuemin="0" aria-valuemax="120" style="width: ' + hourProg + '%;"></div>');
        } else {
            $("#hours_Progress").html('<div class="progress-bar" role="progressbar" aria-valuenow="' + hourProg + '" aria-valuemin="0" aria-valuemax="120" style="width: ' + hourProg + '%;"></div>');
        }
        //activate latest tab, if it exists:
        var lastTab_JobDetails = $.cookie('lastTab_JobDetails');
        if (lastTab_JobDetails) {
            $('ul.nav-tabs').children().removeClass('active');
            $("a[href*='"+ lastTab_JobDetails +"']").parents('li:first').addClass('active');
            $('div.tab-content').children().removeClass('active');
            $(lastTab_JobDetails).addClass('active');
            //$(lastTab).tab('show');
            CompletedTable.columns.adjust().draw()
            PurchasesTable.columns.adjust().draw()
        }
    })
    $('#JobDetailsTabs a').click(function (e) {
        e.preventDefault()
        $(this).tab('show')
        $.cookie('lastTab_JobDetails', $(e.target).attr('href'));
        ActiveTable.columns.adjust().draw()
        CompletedTable.columns.adjust().draw()
        PurchasesTable.columns.adjust().draw()
    })

    //Handle project status label
    var status = "@Model.Job.Status";
    switch(status) {
        case "Active":
            $("#project_status").addClass("label-warning");
            break;
        case "NotReady":
            $("#project_status").addClass("label-danger");
            break;
        case "Completed":
            $("#project_status").addClass("label-success");
            break;
        default:
            $("#project_status").addClass("label-default");
    }
</script>