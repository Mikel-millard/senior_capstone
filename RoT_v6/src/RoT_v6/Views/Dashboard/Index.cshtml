@model RoT_v6.ViewModels.Dashboard_WorkTaskToDo

@{
    ViewData["Title"] = "Index";
}

<div class="row">
    @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
    {
        <a id="showAllTasks" style="margin-top: 23px; margin-left: 10px; float:right;" class="btn btn-primary" asp-controller="Dashboard" asp-action="AllTasks">View All Tasks</a>
    }
    <h1>
        Your Active Tasks
    </h1>
    <table class="table table-striped table-bordered" id="ActiveTasks">
        <thead class="data_table_head">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ActiveTasks[0].Block)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ActiveTasks[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ActiveTasks[0].partNum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ActiveTasks[0].Status)
                </th>
                <th>
                    Edit Status
                </th>
                <th></th>
            </tr>
        </thead>



        <tbody>
            @foreach (var item in Model.ActiveTasks)
            {

                <tr>
                    @if (item.Block == true)
                    {
                        <td class="red-back">
                            Blocked
                        </td>
                    }
                    else
                    {
                        <td class="green-back"></td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.partNum)
                    </td>

                    @{
                        if (item.Status.ToString() == "Pause")
                        {
                            <td class="red-back">
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                        }
                        else if (item.Status.ToString() == "Created")
                        {
                            <td class="green-back">
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                        }
                        else if (item.Status.ToString() == "InProgress")
                        {
                            <td class="yellow-back">
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                        }
                        else
                        {
                            <td></td>
                        }
                    }
                    <td>
                        @{
                            var status = item.Status.ToString();
                            if (User.IsInRole("Employee") && item.Block == true)
                            {
                                <span>Task is Blocked</span>

                            }
                            else
                            {
                                switch (status)
                                {
                                    case "Created":
                                        <a class="btn btn-primary" asp-controller="Dashboard" asp-action="Index_editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="InProgress">Start Task</a>
                                        break;
                                    case "Pause":
                                        <a class="btn btn-primary" asp-controller="Dashboard" asp-action="Index_editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="InProgress">Resume Task</a>
                                            <a class="btn btn-primary" asp-controller="Dashboard" asp-action="Index_editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="CompleteFromPause">Complete Task</a>
                                        break;
                                    case "InProgress":
                                        <a class="btn btn-primary" asp-controller="Dashboard" asp-action="Index_editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="Pause">Pause Task</a>
                                            <a class="btn btn-primary" asp-controller="Dashboard" asp-action="Index_editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="Complete">Complete Task</a>
                                        break;
                                }
                            }
                        }
                    </td>
                    <td>
                        @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                        {
                            <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'EditDashboard', @item.TaskID)">Edit</button>
                        }
                        <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DetailsDashboard', @item.TaskID)">Details</button>
                        @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                        {
                            <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DeleteDashboard', @item.TaskID)">Delete</button>
                        }
                        <a class="btn btn-primary" asp-controller="Jobs" asp-action="Details" asp-route-id="@item.JobID">Job</a>
                    </td>
                </tr>
                            }
        </tbody>
    </table>


    <div>

        <p>
            <h2 style="display: inline-block; padding-right:1em;">To Do</h2>

            @if (User.IsInRole("Admin"))
            {
                <button class="btn btn-primary" onclick="dataUrl('ToDoes', 'Create')">Create New</button>
            }




        </p>
        <table class="table table-striped table-bordered" id="ToDos">
            <thead class="data_table_head">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpToDo[0].CreatedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpToDo[0].Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpToDo[0].DueDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpToDo[0].Priority)
                    </th>
                    <th>
                        Employees
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.EmpToDo)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DueDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Priority)
                        </td>
                        <td>
                            @foreach (var emp in item.EmployeeTodo)
                            {    @foreach (var r in Model.User)
                            {
                                @if (emp.employeeId == r.Id)
                                {
                                    @r.name
                                    <br />

                                }
                            }
                            }
                        </td>

                        <td>
                            @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                            {
                                <button class="btn btn-primary" onclick="dataUrl('ToDoes', 'Edit', @item.ToDoId)">Edit</button>
                            }
                            <button class="btn btn-primary" onclick="dataUrl('ToDoes', 'Details', @item.ToDoId)">Details</button>
                            @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                            {
                                <button class="btn btn-primary" onclick="dataUrl('ToDoes', 'Delete', @item.ToDoId)">Delete</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    var CompletedTable;
    $(document).ready(function () {
        $("#ActiveTasks").DataTable({
            "scrollY": "250px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": true,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" },
                {
                    "targets": [1,2],
                    "render": $.fn.dataTable.render.ellipsis()
                }
            ]
        });
        $("#ToDos").DataTable({
            "scrollY": "250px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": true,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" },
                {
                    "targets": 1,
                    "render": $.fn.dataTable.render.ellipsis()
                }
            ]
        });
        $("a[href*='Dashboard']").css("background-color", "#E5C527");
        $("a[href*='Dashboard']").css("color", "black");
    })
</script>
