@model RoT_v6.ViewModels.Dashboard_WorkTaskToDo

@{
    ViewData["Title"] = "Index";
}

<div class="row">

    <ul class="nav nav-tabs page-tabs" role="tablist" id="DashboardTabs">
        <li role="presentation" class="active"><a href="#ActiveTasksTab" aria-controls="ActiveTasksTab" role="tab" data-toggle="tab">Active Tasks</a></li>
        <li role="presentation"><a href="#CompletedTasksTab" aria-controls="CompletedTasksTab" role="tab" data-toggle="tab">Completed Tasks</a></li>

    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="ActiveTasksTab">
            <p>
                <!--<h2 style="display: inline-block; padding-right:1em;">Active Tasks</h2>-->
            </p>
            <table class="table table-striped table-bordered" id="ActiveTasks">
                <thead class="data_table_head">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Block)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].partNum)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActiveTasks[0].Status)
                        </th>
                        <th>
                            Edit Status
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ActiveTasks)
                    {

                        <tr>
                            @if (item.Block == true)
                            {
                                <td class="red-back">
                                    @Html.DisplayFor(modelItem => item.Block)
                                </td>
                            }
                            else
                            {
                                <td class="green-back">
                                    @Html.DisplayFor(modelItem => item.Block)
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.partNum)
                            </td>
                            @if (item.Status.ToString() == "Pause")
                            {
                                <td class="red-back">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                            }
                            @if (item.Status.ToString() == "Created")
                            {
                                <td class="green-back">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                            }
                            @if (item.Status.ToString() == "InProgress")
                            {
                                <td class="yellow-back">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                            }
                            <td>
                                @{
                                    var status = item.Status.ToString();
                                    switch (status)
                                    {
                                        case "Created":
                                            <a class="btn btn-primary" asp-controller="Dashboard" asp-action="editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="InProgress">Start Task</a>
                                            break;
                                        case "Pause":
                                            <a class="btn btn-primary" asp-controller="Dashboard" asp-action="editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="InProgress">Resume Task</a>
                                            <a class="btn btn-primary" asp-controller="Dashboard" asp-action="editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="CompleteFromPause">Complete Task</a>
                                            break;
                                        case "InProgress":
                                            <a class="btn btn-primary" asp-controller="Dashboard" asp-action="editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="Pause">Pause Task</a>
                                            <a class="btn btn-primary" asp-controller="Dashboard" asp-action="editTaskStatus" asp-route-id="@item.TaskID" asp-route-status="Complete">Complete Task</a>
                                            break;
                                    }
                                }
                            </td>
                            <td>
                                @if (!User.IsInRole("Employee"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'EditDashboard', @item.TaskID)">Edit</button>
                                }
                                <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DetailsDashboard', @item.TaskID)">Details</button>
                                @if (!User.IsInRole("Employee"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DeleteDashboard', @item.TaskID)">Delete</button>
                                }
                            </td>
                        </tr>
                                    }
                </tbody>
            </table>

        </div>
        <div role="tabpanel" class="tab-pane" id="CompletedTasksTab">
            <p>
                <!--<h2 style="display: inline-block; padding-right:1em;">Completed Tasks</h2>-->
            </p>
            <table class="table table-striped table-bordered" id="CompletedTasks">
                <thead class="data_table_head">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].Block)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].partNum)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.CompletedTasks[0].CompleteDate)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CompletedTasks)
            {
                        <tr>
                            @if (item.Block == true)
                            {
                                <td class="red-back">
                                    @Html.DisplayFor(modelItem => item.Block)
                                </td>
                            }
                            else
                            {
                                <td class="green-back">
                                    @Html.DisplayFor(modelItem => item.Block)
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.partNum)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.CompleteDate)
                            </td>
                            <td>
                                @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'EditDashboard', @item.TaskID)">Edit</button>
                                }
                                <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DetailsDashboard', @item.TaskID)">Details</button>
                                @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                                {
                                    <button class="btn btn-primary" onclick="dataUrl('WorkTasks', 'DeleteDashboard', @item.TaskID)">Delete</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div>

        <p>
            <h2 style="display: inline-block; padding-right:1em;">ToDo</h2>

            @if (User.IsInRole("Admin"))
            {
                <button class="btn btn-primary" onclick="dataUrl('ToDoes', 'Create')">Create New</button>
            }




        </p>
        <table class="table table-striped table-bordered" id="ToDos">
            <thead class="data_table_head">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpToDo[0].CreatedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpToDo[0].Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpToDo[0].DueDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpToDo[0].Priority)
                    </th>
                    <th>
                        Employees
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.EmpToDo)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DueDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Priority)
                        </td>
                        <td>
                            @foreach (var emp in item.EmployeeTodo)
                            {    @foreach (var r in Model.User)
                            {
                                @if (emp.employeeId == r.Id)
                                {
                                    @r.name
                                    <br />

                                }
                            }
                            }
                        </td>

                        <td>
                            @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                            {
                                <button class="btn btn-primary" onclick="dataUrl('ToDoes', 'Edit', @item.ToDoId)">Edit</button>
                            }
                            <button class="btn btn-primary" onclick="dataUrl('ToDoes', 'Details', @item.ToDoId)">Details</button>
                            @if (User.IsInRole("Admin") || User.IsInRole("ShopManager"))
                            {
                                <button class="btn btn-primary" onclick="dataUrl('ToDoes', 'Delete', @item.ToDoId)">Delete</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    var CompletedTable;
    $(document).ready(function () {
        $("#ActiveTasks").DataTable({
            "scrollY": "200px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": true,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" },
                {
                    "targets": 1,
                    "render": $.fn.dataTable.render.ellipsis()
                }
            ]
        });
        CompletedTable = $("#CompletedTasks").DataTable({
            "scrollY": "200px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": true,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" },
                {
                    "targets": 1,
                    "render": $.fn.dataTable.render.ellipsis()
                }
            ]
        });
        $("#ToDos").DataTable({
            "scrollY": "200px",
            "scrollCollapse": true,
            "paging": false,
            "ordering": true,
            "info": false,
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" },
                {
                    "targets": 1,
                    "render": $.fn.dataTable.render.ellipsis()
                }
            ]
        });
    })
    $('#DashboardTabs a').click(function (e) {
        e.preventDefault()
        $(this).tab('show')
        CompletedTable.columns.adjust().draw()
    })
</script>
